name: 🧪 Тестирование

on:
  push:
    branches: [main, feature/*, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Lint code
        run: pnpm lint

      - name: 🧪 Run unit tests
        run: pnpm test:coverage

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: 🧪 Run E2E tests
        run: |
          pnpm test:e2e
        env:
          CI: true

      - name: 📤 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results/
            playwright-report/
            coverage/

  test-matrix:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: 🧪 Run E2E tests on ${{ matrix.browser }}
        run: |
          pnpm test:e2e --project=${{ matrix.browser }}
        env:
          CI: true

      - name: 📤 Upload test results for ${{ matrix.browser }}
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/

  security:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔒 Run security audit
        run: pnpm audit --audit-level moderate

  quality:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Check TypeScript types
        run: pnpm tsc --noEmit

      - name: 🏗️ Build project
        run: pnpm build

      - name: 📊 Check bundle size
        run: |
          npm install -g @next/bundle-analyzer
          ANALYZE=true pnpm build
