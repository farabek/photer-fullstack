'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { Card } from '@/widgets/card/card';
import { Input } from '@/shared/ui';
import { Button } from '@/shared/ui';
import { useConfirmEmail } from './useConfirmEmail';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ UUID v4 —Ñ–æ—Ä–º–∞—Ç–∞
const isValidUUID = (uuid: string): boolean => {
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π
  const cleanedUuid = uuid.replace(/\s+/g, '');
  const uuidRegex =
    /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
  return uuidRegex.test(cleanedUuid);
};

export function ConfirmEmailForm() {
  const [code, setCode] = useState('');
  const [localError, setLocalError] = useState('');
  const router = useRouter();
  const { confirmEmail, isLoading, error } = useConfirmEmail();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLocalError('');

    console.log('üîç Form submitted with code:', code);
    console.log('üîç Code length:', code.length);
    console.log('üîç Code trimmed:', code.trim());

    if (!code.trim()) {
      console.log('‚ùå Code is empty');
      setLocalError('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç UUID
    const isValid = isValidUUID(code.trim());
    console.log('üîç UUID validation result:', isValid);

    if (!isValid) {
      console.log('‚ùå UUID validation failed');
      setLocalError(
        '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ UUID (–Ω–∞–ø—Ä–∏–º–µ—Ä: 550e8400-e29b-41d4-a716-446655440000)'
      );
      return;
    }

    console.log('‚úÖ UUID validation passed, calling confirmEmail');
    const success = await confirmEmail(code.trim());
    if (success) {
      console.log('‚úÖ Email confirmed, redirecting to sign-in');
      router.push('/sign-in?confirmed=true');
    }
  };

  const handleCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã –∏–∑ –∫–æ–¥–∞
    const cleanedValue = value.replace(/\s+/g, '');
    setCode(cleanedValue);
    setLocalError(''); // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏

    console.log('üîç Input changed:', {
      original: value,
      cleaned: cleanedValue,
    });
  };

  return (
    <Card className="m-0-auto mt-6 flex min-h-162 w-[378px] flex-col items-center justify-center">
      <h1 className="h1-text mt-[23px]">Confirm Your Email</h1>

      <div className="mt-6 w-full px-6">
        <p className="mb-6 text-center text-gray-400">
          –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ –≤–∞—à email. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –≤–≤–µ–¥–∏—Ç–µ
          –∫–æ–¥ –Ω–∏–∂–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞.
        </p>

        <form onSubmit={handleSubmit} className="space-y-4">
          <Input
            label="–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (UUID)"
            value={code}
            onChange={handleCodeChange}
            placeholder="550e8400-e29b-41d4-a716-446655440000"
            errorMessage={localError || error}
            required
          />

          <Button
            type="submit"
            disabled={isLoading || !code.trim()}
            className="w-full"
          >
            {isLoading ? '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ...' : '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å Email'}
          </Button>
        </form>

        <div className="mt-6 text-center">
          <p className="text-sm text-gray-400">–ù–µ –ø–æ–ª—É—á–∏–ª–∏ –∫–æ–¥?</p>
          <Button
            variant="text"
            onClick={() => router.push('/resend-link')}
            className="text-sm"
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ
          </Button>
        </div>

        <div className="mt-4 text-center">
          <Button
            variant="text"
            onClick={() => router.push('/sign-in')}
            className="text-sm"
          >
            –ù–∞–∑–∞–¥ –∫ –≤—Ö–æ–¥—É
          </Button>
        </div>
      </div>
    </Card>
  );
}
